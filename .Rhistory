debug(normalize_data)
x <- preprocess_data(type='swim', test=T)
View(data
)
unique(data$Comments)
max(data$EndDate)
data$EndDate
debug(format_data)
x <- preprocess_data(type='swim', test=T)
summary(data())
summary(data
)
View(data
)
data[is.na(data$EndDate),]
last_sessions
as.Date(gsub(x = data[last_sessions,]$Comments, pattern = '\\n            \\n Last session: ',replacement = ''), format = '%A, %B %d, %Y')
data[last_sessions,]
as.Date(gsub(x = data[last_sessions,]$Comments, pattern = 'Last session: ',replacement = ''), format = '%A, %B %d, %Y')
as.Date(gsub(x = data[last_sessions,]$Comments, pattern = 'Last session: ',replacement = ''), format = '%A, %B %d, %Y')
gsub(x = data[last_sessions,]$Comments, pattern = 'Last session: ',replacement = '')
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
format_data <- function(data) {
#----------------------------
#     Format dates
#----------------------------
#     Append current year to StartDate...
data$StartDate <- as.Date(paste0(data$StartDate, ', ', format(Sys.Date(), '%Y')), format = '%A, %B %d, %Y')
#     ...then add 1 year for any dates in the past
data[data$StartDate < Sys.Date(),]$StartDate <- data[data$StartDate < Sys.Date(),]$StartDate + years(1)
data$EndDate <- as.Date(data$EndDate)
#----------------------------
#     Clean up comments
#----------------------------
last_sessions <- grepl(pattern = 'Last session', x = data$Comments)
if(sum(last_sessions)>0) {
data[last_sessions,]$EndDate <- as.Date(trim(gsub(x = data[last_sessions,]$Comments, pattern = 'Last session: ',replacement = '')), format = '%A, %B %d, %Y')
}
#----------------------------------------------------------------------------------
#     Join to Sessions lookup to shorten SessionType and retrieve SessionGroup
#----------------------------------------------------------------------------------
data <- merge(data, sessions, by.x = "SessionType", by.y = "longname", all.x = T)
data$SessionType <- data$shortname
#----------------------------------------------------
#     Join to Arenas lookup to retrieve Locale
#----------------------------------------------------
data <- merge(data, arenas, by="Arena", all.x = T)
#---------------------------------
#     Clean up Arena Names
#---------------------------------
data$Arena <- gsub('( Pools)|( Pool)|( Arena)|( Recreation Complex)', '', data$Arena)
data
}
debug(format_data)
x <- preprocess_data(type='swim', test=T)
as.Date(trim(gsub(x = data[last_sessions,]$Comments, pattern = 'Last session: ',replacement = '')), format = '%A, %B %d, %Y')
format_data <- function(data) {
#----------------------------
#     Format dates
#----------------------------
#     Append current year to StartDate...
data$StartDate <- as.Date(paste0(data$StartDate, ', ', format(Sys.Date(), '%Y')), format = '%A, %B %d, %Y')
#     ...then add 1 year for any dates in the past
data[data$StartDate < Sys.Date(),]$StartDate <- data[data$StartDate < Sys.Date(),]$StartDate + years(1)
data$EndDate <- as.Date(data$EndDate)
#----------------------------
#     Clean up comments
#----------------------------
last_sessions <- grepl(pattern = 'Last session', x = data$Comments)
if(sum(last_sessions)>0) {
data[last_sessions,]$EndDate <- as.Date(trim(gsub(x = data[last_sessions,]$Comments, pattern = 'Last session: ',replacement = '')), format = '%A, %B %d, %Y')
}
#----------------------------------------------------------------------------------
#     Join to Sessions lookup to shorten SessionType and retrieve SessionGroup
#----------------------------------------------------------------------------------
data <- merge(data, sessions, by.x = "SessionType", by.y = "longname", all.x = T)
data$SessionType <- data$shortname
#----------------------------------------------------
#     Join to Arenas lookup to retrieve Locale
#----------------------------------------------------
data <- merge(data, arenas, by="Arena", all.x = T)
#---------------------------------
#     Clean up Arena Names
#---------------------------------
data$Arena <- gsub('( Pools)|( Pool)|( Arena)|( Recreation Complex)', '', data$Arena)
data
}
x <- preprocess_data(type='swim', test=T)
normalize_data <- function(data) {
#     Create set of dates to be used
#     Recreating every time we run will remove old dates that are no longer relevant
#     This could act as a natural limiter to the data volume
dates <- GetDates(max(data$EndDate))
#     Join each schedule row to list of dates to get individual schedules
#     Keep all ancillary fields
all <- merge(dates, data, by = "Day")
filtered <- all[all$Date >= all$StartDate & all$Date <= all$EndDate, ]
#     Remove cancellations
cancellations <<- do.call(rbind, apply(data, 1, parse_cancellations))
cancellations$ID <- as.integer(cancellations$ID)
filtered <- merge(filtered, cancellations, by.x = c("ID", "Date"), by.y = c("ID", "CancelDate"), all.x = T)
#     Join time to dates
filtered$StartDateTime <- as.POSIXlt(as.character(paste(as.character(filtered$Date),  filtered$StartTime)), "%Y-%m-%d %I:%M %p ", tz="EST")
filtered$EndDateTime <- as.POSIXlt(as.character(paste(as.character(filtered$Date),  filtered$EndTime)), "%Y-%m-%d %I:%M %p ", tz="EST")
#     Return filtered dates without cancellations
filtered[is.na(filtered$Start), ]
}
View(x)
summary(x)
#---------------------------------
#     Define Arena names
#---------------------------------
#rm(arenas)
arenas <- matrix(c('Barbara Ann Scott Arena', 'West End', '45.348021', '-75.773401'
, 'Bell Centennial Arena', 'West End', '45.324412', '-75.811532'
, 'Belltown Dome', 'West End', '45.360014', '-75.803732'
, 'Bernard-Grandmaître Arena', 'East', '45.432813', '-75.655395'
, 'Blackburn Arena', 'East', '45.43', '-75.563149'
, 'Bob MacQuarrie Recreation Complex - Orléans', 'East', '45.466459', '-75.545228'
, 'Brewer Arena', 'Central', '45.389097', '-75.691057'
, 'Brian Kilrea Arena', 'Central', '45.390558', '-75.628903'
, 'Earl Armstrong Arena', 'East', '45.43588', '-75.602864'
, 'Fred Barrett Arena', 'South', '45.331162', '-75.598078'
, 'Goulbourn Recreation Complex', 'West', '45.263237', '-75.907526'
, 'Howard Darwin Centennial Arena (formerly Merivale)', 'West End', '45.341963', '-75.72629'
, 'J.A. Dulude Arena', 'West End', '45.373757', '-75.743907'
, 'Jack Charron Arena', 'West', '45.293619', '-75.883852'
, 'Jim Durrell Recreation Centre', 'Central', '45.372846', '-75.6597'
, 'John G. Mlacak Community Centre', 'West', '45.320822', '-75.897182'
, 'Johnny Leroux Stittsville Community Arena', 'West', '45.260748', '-75.925043'
, 'Kanata Recreation Complex', 'West', '45.295047', '-75.903432'
, 'Larry Robinson Arena', 'South', '45.230279', '-75.46887'
, 'Manotick Arena', 'South', '45.22092', '-75.68733'
, 'McNabb Recreation Centre', 'Central', '45.409026', '-75.702634'
, 'Minto Recreation Complex - Barrhaven', 'South', '45.253397', '-75.736022'
, 'Navan Memorial Centre', 'East', '45.421381', '-75.421326'
, 'Nepean Sportsplex', 'West End', '45.326912', '-75.746002'
, 'R.J. Kennedy Arena', 'East', '45.514531', '-75.402976'
, 'Ray Friel Recreation Complex', 'East', '45.471382', '-75.49173'
, 'Richmond Arena', 'South', '45.195657', '-75.837795'
, 'Sandy Hill Community Centre', 'Central', '45.419286', '-75.673804'
, 'St-Laurent Complex', 'East', '45.43638', '-75.647014'
, 'Stuart Holmes Arena', 'South', '45.147472', '-75.601273'
, 'Tom Brown Arena', 'Central', '45.408105', '-75.722154'
, 'W. Erskine Johnston Arena', 'West', '45.349145', '-76.038851'
, 'Walter Baker Sports Centre', 'West', '45.280326', '-75.761861'), ncol=4, byrow = T)
arenas <- rbind(arenas,
matrix(c('Bob MacQuarrie Recreation Complex - Orléans', 'East', '45.466459', '-75.545228'
, 'Brewer Pool', 'Central', '45.389361', '-75.691916'
, 'Canterbury Recreation Complex', 'South', '45.390558', '-75.628903'
, 'Champagne Pool & Fitness Centre', 'Central', '45.430659', '-75.686719'
, 'Dovercourt', 'West End', '45.383344', '-75.752209'
, 'Deborah Anne Kirwan Pool', 'South', '45.367799', '-75.656587'
, 'François Dupuis Recreation Centre', 'East', '45.457012', '-75.449182'
, 'Goulbourn Recreation Complex', 'West', '45.263237', '-75.907526'
, 'Jack Purcell Community Centre', 'Central', '45.415769', '-75.689533'
, 'Kanata Wave Pool', 'West', '45.311241', '-75.898782'
, 'Lowertown Pool', 'Central', '45.434277', '-75.681504'
, 'Minto Recreation Complex - Barrhaven', 'South', '45.253397', '-75.736022'
, 'Nepean Sportsplex', 'West End', '45.326912', '-75.746002'
, 'Pinecrest Pool', 'West End', '45.348021', '-75.773401'
, 'Plant Recreation Centre', 'Central', '45.40799', '-75.714452'
, 'Ray Friel Recreation Complex', 'East', '45.471382', '-75.49173'
, 'Richcraft Recreation Center - Kanata', 'West', '45.344475', '-75.93036'
, 'Sawmill Creek Pool & Community Centre 25 metre pool', 'South', '45.350423', '-75.636775'
, 'Splash Wave Pool', 'East', '45.437087', '-75.600821'
, 'St-Laurent Pool', 'East', '45.43638', '-75.647014'
, 'Walter Baker Sports Centre', 'West', '45.280326', '-75.761861'
, 'Y-Carlingwood', 'West End', '45.37274', '-75.769143'
, 'Y-Ruddy Family', 'East', '45.481451', '-75.508211'
, 'Y-Taggart Family', 'Central', '45.411486', '-75.689558'
, 'Y-Clarence Rockland', 'East', '45.550633', '-75.286126'), ncol=4, byrow = T))
colnames(arenas) <- c('Arena', 'Locale', 'Latitude', 'Longitude')
arenas <- as.data.frame(unique(arenas))
x <- preprocess_data(type='swim', test=T)
summary(x)
arenas
unique(x$Arena)
grepl(pattern = 'Sawmill Creek Pool', x = x$Arena)
format_data <- function(data) {
#----------------------------
#     Format dates
#----------------------------
#     Append current year to StartDate...
data$StartDate <- as.Date(paste0(data$StartDate, ', ', format(Sys.Date(), '%Y')), format = '%A, %B %d, %Y')
#     ...then add 1 year for any dates in the past
data[data$StartDate < Sys.Date(),]$StartDate <- data[data$StartDate < Sys.Date(),]$StartDate + years(1)
data$EndDate <- as.Date(data$EndDate)
#----------------------------
#     Clean up comments
#----------------------------
last_sessions <- grepl(pattern = 'Last session', x = data$Comments)
if(sum(last_sessions)>0) {
data[last_sessions,]$EndDate <- as.Date(trim(gsub(x = data[last_sessions,]$Comments, pattern = 'Last session: ',replacement = '')), format = '%A, %B %d, %Y')
}
#----------------------------------------------------------------------------------
#     Join to Sessions lookup to shorten SessionType and retrieve SessionGroup
#----------------------------------------------------------------------------------
data <- merge(data, sessions, by.x = "SessionType", by.y = "longname", all.x = T)
data$SessionType <- data$shortname
#----------------------------------------------------
#     Join to Arenas lookup to retrieve Locale
#----------------------------------------------------
#     Clean up Sawmill Arena entries
data[grepl(pattern = 'Sawmill Creek Pool', x = data$Arena),] <- c('Sawmill Creek Pool & Community Centre')
data <- merge(data, arenas, by="Arena", all.x = T)
#---------------------------------
#     Clean up Arena Names
#---------------------------------
data$Arena <- gsub('( Pools)|( Pool)|( Arena)|( Recreation Complex)', '', data$Arena)
data
}
x <- preprocess_data(type='swim', test=T)
debug(format_data)
x <- preprocess_data(type='swim', test=T)
data[grepl(pattern = 'Sawmill Creek Pool', x = data$Arena),]
format_data <- function(data) {
#----------------------------
#     Format dates
#----------------------------
#     Append current year to StartDate...
data$StartDate <- as.Date(paste0(data$StartDate, ', ', format(Sys.Date(), '%Y')), format = '%A, %B %d, %Y')
#     ...then add 1 year for any dates in the past
data[data$StartDate < Sys.Date(),]$StartDate <- data[data$StartDate < Sys.Date(),]$StartDate + years(1)
data$EndDate <- as.Date(data$EndDate)
#----------------------------
#     Clean up comments
#----------------------------
last_sessions <- grepl(pattern = 'Last session', x = data$Comments)
if(sum(last_sessions)>0) {
data[last_sessions,]$EndDate <- as.Date(trim(gsub(x = data[last_sessions,]$Comments, pattern = 'Last session: ',replacement = '')), format = '%A, %B %d, %Y')
}
#----------------------------------------------------------------------------------
#     Join to Sessions lookup to shorten SessionType and retrieve SessionGroup
#----------------------------------------------------------------------------------
data <- merge(data, sessions, by.x = "SessionType", by.y = "longname", all.x = T)
data$SessionType <- data$shortname
#----------------------------------------------------
#     Join to Arenas lookup to retrieve Locale
#----------------------------------------------------
#     Clean up Sawmill Arena entries
data[grepl(pattern = 'Sawmill Creek Pool', x = data$Arena),]$Arena <- c('Sawmill Creek Pool & Community Centre')
data <- merge(data, arenas, by="Arena", all.x = T)
#---------------------------------
#     Clean up Arena Names
#---------------------------------
data$Arena <- gsub('( Pools)|( Pool)|( Arena)|( Recreation Complex)', '', data$Arena)
data
}
x <- preprocess_data(type='swim', test=T)
summary(x)
debug(format_data)
x <- preprocess_data(type='swim', test=T)
data[grepl(pattern = 'Sawmill Creek Pool', x = data$Arena),]$Arena
data[grepl(pattern = 'Sawmill Creek Pool', x = data$Arena),]$Arena
arenas
#rm(arenas)
arenas <- matrix(c('Barbara Ann Scott Arena', 'West End', '45.348021', '-75.773401'
, 'Bell Centennial Arena', 'West End', '45.324412', '-75.811532'
, 'Belltown Dome', 'West End', '45.360014', '-75.803732'
, 'Bernard-Grandmaître Arena', 'East', '45.432813', '-75.655395'
, 'Blackburn Arena', 'East', '45.43', '-75.563149'
, 'Bob MacQuarrie Recreation Complex - Orléans', 'East', '45.466459', '-75.545228'
, 'Brewer Arena', 'Central', '45.389097', '-75.691057'
, 'Brian Kilrea Arena', 'Central', '45.390558', '-75.628903'
, 'Earl Armstrong Arena', 'East', '45.43588', '-75.602864'
, 'Fred Barrett Arena', 'South', '45.331162', '-75.598078'
, 'Goulbourn Recreation Complex', 'West', '45.263237', '-75.907526'
, 'Howard Darwin Centennial Arena (formerly Merivale)', 'West End', '45.341963', '-75.72629'
, 'J.A. Dulude Arena', 'West End', '45.373757', '-75.743907'
, 'Jack Charron Arena', 'West', '45.293619', '-75.883852'
, 'Jim Durrell Recreation Centre', 'Central', '45.372846', '-75.6597'
, 'John G. Mlacak Community Centre', 'West', '45.320822', '-75.897182'
, 'Johnny Leroux Stittsville Community Arena', 'West', '45.260748', '-75.925043'
, 'Kanata Recreation Complex', 'West', '45.295047', '-75.903432'
, 'Larry Robinson Arena', 'South', '45.230279', '-75.46887'
, 'Manotick Arena', 'South', '45.22092', '-75.68733'
, 'McNabb Recreation Centre', 'Central', '45.409026', '-75.702634'
, 'Minto Recreation Complex - Barrhaven', 'South', '45.253397', '-75.736022'
, 'Navan Memorial Centre', 'East', '45.421381', '-75.421326'
, 'Nepean Sportsplex', 'West End', '45.326912', '-75.746002'
, 'R.J. Kennedy Arena', 'East', '45.514531', '-75.402976'
, 'Ray Friel Recreation Complex', 'East', '45.471382', '-75.49173'
, 'Richmond Arena', 'South', '45.195657', '-75.837795'
, 'Sandy Hill Community Centre', 'Central', '45.419286', '-75.673804'
, 'St-Laurent Complex', 'East', '45.43638', '-75.647014'
, 'Stuart Holmes Arena', 'South', '45.147472', '-75.601273'
, 'Tom Brown Arena', 'Central', '45.408105', '-75.722154'
, 'W. Erskine Johnston Arena', 'West', '45.349145', '-76.038851'
, 'Walter Baker Sports Centre', 'West', '45.280326', '-75.761861'), ncol=4, byrow = T)
arenas <- rbind(arenas,
matrix(c('Bob MacQuarrie Recreation Complex - Orléans', 'East', '45.466459', '-75.545228'
, 'Brewer Pool', 'Central', '45.389361', '-75.691916'
, 'Canterbury Recreation Complex', 'South', '45.390558', '-75.628903'
, 'Champagne Pool & Fitness Centre', 'Central', '45.430659', '-75.686719'
, 'Dovercourt', 'West End', '45.383344', '-75.752209'
, 'Deborah Anne Kirwan Pool', 'South', '45.367799', '-75.656587'
, 'François Dupuis Recreation Centre', 'East', '45.457012', '-75.449182'
, 'Goulbourn Recreation Complex', 'West', '45.263237', '-75.907526'
, 'Jack Purcell Community Centre', 'Central', '45.415769', '-75.689533'
, 'Kanata Wave Pool', 'West', '45.311241', '-75.898782'
, 'Lowertown Pool', 'Central', '45.434277', '-75.681504'
, 'Minto Recreation Complex - Barrhaven', 'South', '45.253397', '-75.736022'
, 'Nepean Sportsplex', 'West End', '45.326912', '-75.746002'
, 'Pinecrest Pool', 'West End', '45.348021', '-75.773401'
, 'Plant Recreation Centre', 'Central', '45.40799', '-75.714452'
, 'Ray Friel Recreation Complex', 'East', '45.471382', '-75.49173'
, 'Richcraft Recreation Center - Kanata', 'West', '45.344475', '-75.93036'
, 'Sawmill Creek Pool & Community Centre', 'South', '45.350423', '-75.636775'
, 'Splash Wave Pool', 'East', '45.437087', '-75.600821'
, 'St-Laurent Pool', 'East', '45.43638', '-75.647014'
, 'Walter Baker Sports Centre', 'West', '45.280326', '-75.761861'
, 'Y-Carlingwood', 'West End', '45.37274', '-75.769143'
, 'Y-Ruddy Family', 'East', '45.481451', '-75.508211'
, 'Y-Taggart Family', 'Central', '45.411486', '-75.689558'
, 'Y-Clarence Rockland', 'East', '45.550633', '-75.286126'), ncol=4, byrow = T))
colnames(arenas) <- c('Arena', 'Locale', 'Latitude', 'Longitude')
arenas <- as.data.frame(unique(arenas))
rm(arenas)
arenas <- matrix(c('Barbara Ann Scott Arena', 'West End', '45.348021', '-75.773401'
, 'Bell Centennial Arena', 'West End', '45.324412', '-75.811532'
, 'Belltown Dome', 'West End', '45.360014', '-75.803732'
, 'Bernard-Grandmaître Arena', 'East', '45.432813', '-75.655395'
, 'Blackburn Arena', 'East', '45.43', '-75.563149'
, 'Bob MacQuarrie Recreation Complex - Orléans', 'East', '45.466459', '-75.545228'
, 'Brewer Arena', 'Central', '45.389097', '-75.691057'
, 'Brian Kilrea Arena', 'Central', '45.390558', '-75.628903'
, 'Earl Armstrong Arena', 'East', '45.43588', '-75.602864'
, 'Fred Barrett Arena', 'South', '45.331162', '-75.598078'
, 'Goulbourn Recreation Complex', 'West', '45.263237', '-75.907526'
, 'Howard Darwin Centennial Arena (formerly Merivale)', 'West End', '45.341963', '-75.72629'
, 'J.A. Dulude Arena', 'West End', '45.373757', '-75.743907'
, 'Jack Charron Arena', 'West', '45.293619', '-75.883852'
, 'Jim Durrell Recreation Centre', 'Central', '45.372846', '-75.6597'
, 'John G. Mlacak Community Centre', 'West', '45.320822', '-75.897182'
, 'Johnny Leroux Stittsville Community Arena', 'West', '45.260748', '-75.925043'
, 'Kanata Recreation Complex', 'West', '45.295047', '-75.903432'
, 'Larry Robinson Arena', 'South', '45.230279', '-75.46887'
, 'Manotick Arena', 'South', '45.22092', '-75.68733'
, 'McNabb Recreation Centre', 'Central', '45.409026', '-75.702634'
, 'Minto Recreation Complex - Barrhaven', 'South', '45.253397', '-75.736022'
, 'Navan Memorial Centre', 'East', '45.421381', '-75.421326'
, 'Nepean Sportsplex', 'West End', '45.326912', '-75.746002'
, 'R.J. Kennedy Arena', 'East', '45.514531', '-75.402976'
, 'Ray Friel Recreation Complex', 'East', '45.471382', '-75.49173'
, 'Richmond Arena', 'South', '45.195657', '-75.837795'
, 'Sandy Hill Community Centre', 'Central', '45.419286', '-75.673804'
, 'St-Laurent Complex', 'East', '45.43638', '-75.647014'
, 'Stuart Holmes Arena', 'South', '45.147472', '-75.601273'
, 'Tom Brown Arena', 'Central', '45.408105', '-75.722154'
, 'W. Erskine Johnston Arena', 'West', '45.349145', '-76.038851'
, 'Walter Baker Sports Centre', 'West', '45.280326', '-75.761861'), ncol=4, byrow = T)
arenas <- rbind(arenas,
matrix(c('Bob MacQuarrie Recreation Complex - Orléans', 'East', '45.466459', '-75.545228'
, 'Brewer Pool', 'Central', '45.389361', '-75.691916'
, 'Canterbury Recreation Complex', 'South', '45.390558', '-75.628903'
, 'Champagne Pool & Fitness Centre', 'Central', '45.430659', '-75.686719'
, 'Dovercourt', 'West End', '45.383344', '-75.752209'
, 'Deborah Anne Kirwan Pool', 'South', '45.367799', '-75.656587'
, 'François Dupuis Recreation Centre', 'East', '45.457012', '-75.449182'
, 'Goulbourn Recreation Complex', 'West', '45.263237', '-75.907526'
, 'Jack Purcell Community Centre', 'Central', '45.415769', '-75.689533'
, 'Kanata Wave Pool', 'West', '45.311241', '-75.898782'
, 'Lowertown Pool', 'Central', '45.434277', '-75.681504'
, 'Minto Recreation Complex - Barrhaven', 'South', '45.253397', '-75.736022'
, 'Nepean Sportsplex', 'West End', '45.326912', '-75.746002'
, 'Pinecrest Pool', 'West End', '45.348021', '-75.773401'
, 'Plant Recreation Centre', 'Central', '45.40799', '-75.714452'
, 'Ray Friel Recreation Complex', 'East', '45.471382', '-75.49173'
, 'Richcraft Recreation Center - Kanata', 'West', '45.344475', '-75.93036'
, 'Sawmill Creek Pool & Community Centre', 'South', '45.350423', '-75.636775'
, 'Splash Wave Pool', 'East', '45.437087', '-75.600821'
, 'St-Laurent Pool', 'East', '45.43638', '-75.647014'
, 'Walter Baker Sports Centre', 'West', '45.280326', '-75.761861'
, 'Y-Carlingwood', 'West End', '45.37274', '-75.769143'
, 'Y-Ruddy Family', 'East', '45.481451', '-75.508211'
, 'Y-Taggart Family', 'Central', '45.411486', '-75.689558'
, 'Y-Clarence Rockland', 'East', '45.550633', '-75.286126'), ncol=4, byrow = T))
colnames(arenas) <- c('Arena', 'Locale', 'Latitude', 'Longitude')
arenas <- as.data.frame(unique(arenas))
arenas
x <- preprocess_data(type='swim', test=T)
summary(x)
View(x)
preprocess_data(test=F)
format_data <- function(data) {
#----------------------------
#     Format dates
#----------------------------
#     Append current year to StartDate...
data$StartDate <- as.Date(paste0(data$StartDate, ', ', format(Sys.Date(), '%Y')), format = '%A, %B %d, %Y')
#     ...then add 1 year for any dates in the past
data[data$StartDate < Sys.Date(),]$StartDate <- data[data$StartDate < Sys.Date(),]$StartDate + years(1)
data$EndDate <- as.Date(data$EndDate)
#----------------------------
#     Clean up comments
#----------------------------
last_sessions <- grepl(pattern = 'Last session', x = data$Comments)
if(sum(last_sessions)>0) {
data[last_sessions,]$EndDate <- as.Date(trim(gsub(x = data[last_sessions,]$Comments, pattern = 'Last session: ',replacement = '')), format = '%A, %B %d, %Y')
}
#----------------------------------------------------------------------------------
#     Join to Sessions lookup to shorten SessionType and retrieve SessionGroup
#----------------------------------------------------------------------------------
data <- merge(data, sessions, by.x = "SessionType", by.y = "longname", all.x = T)
data$SessionType <- data$shortname
#----------------------------------------------------
#     Join to Arenas lookup to retrieve Locale
#----------------------------------------------------
#     Clean up Sawmill Arena entries
data[grepl(pattern = 'Sawmill Creek Pool', x = data$Arena),]$Arena <- c('Sawmill Creek Pool & Community Centre')
data <- merge(data, arenas, by="Arena", all.x = T)
#---------------------------------
#     Clean up Arena Names
#---------------------------------
data$Arena <- gsub('( Pools)|( Pool)|( Arena)|( Recreation Complex)', '', data$Arena)
data
}
parse_cancellations <- function(x) {
if (!grepl(x = x["Comments"], pattern = 'Last session')) {
all_cancels <- data.frame()
for(m in months) {
can <- str_extract_all(x["Comments"], paste(m, " [0-9, ]+", sep=""))
if(!is.na(can)) {
cancel <- str_extract_all(can, "[0-9]+")
canceldates <- as.Date(paste('2015-', m, '-', cancel[[1]], sep=''), format = "%Y-%b-%d")
canceldates <- as.Date(ifelse (as.Date(canceldates) < Sys.Date(), canceldates + years(1), canceldates), origin = '1970-1-1')
#     Join everything together into a single data.frame
for(d in canceldates) {
all_cancels <- rbind(all_cancels,
data.frame(x["ID"], x["StartDate"], as.Date(d, origin="1970-01-01"), stringsAsFactors = FALSE))
}
}
}
if (nrow(all_cancels) > 0) {
colnames(all_cancels) <- c('ID', 'Start', 'CancelDate')
all_cancels$CancelDate <- as.Date(ifelse(all_cancels$CancelDate < all_cancels$Start, all_cancels$CancelDate + years(1), all_cancels$CancelDate), origin = '1970/1/1')
all_cancels
}
}
}
normalize_data <- function(data) {
#     Create set of dates to be used
#     Recreating every time we run will remove old dates that are no longer relevant
#     This could act as a natural limiter to the data volume
dates <- GetDates(max(data$EndDate))
#     Join each schedule row to list of dates to get individual schedules
#     Keep all ancillary fields
all <- merge(dates, data, by = "Day")
filtered <- all[all$Date >= all$StartDate & all$Date <= all$EndDate, ]
#     Remove cancellations
cancellations <<- do.call(rbind, apply(data, 1, parse_cancellations))
cancellations$ID <- as.integer(cancellations$ID)
filtered <- merge(filtered, cancellations, by.x = c("ID", "Date"), by.y = c("ID", "CancelDate"), all.x = T)
#     Join time to dates
filtered$StartDateTime <- as.POSIXlt(as.character(paste(as.character(filtered$Date),  filtered$StartTime)), "%Y-%m-%d %I:%M %p ", tz="EST")
filtered$EndDateTime <- as.POSIXlt(as.character(paste(as.character(filtered$Date),  filtered$EndTime)), "%Y-%m-%d %I:%M %p ", tz="EST")
#     Return filtered dates without cancellations
filtered[is.na(filtered$Start), ]
}
#     Raw data must be retrieved using the retrieve_data() function at the top
#     To reduce number of times we hit the website, it does minimal processing and stores raw
#     data to be processed by the following driver
#
#     NOTE!! - For some reason, loading the arenas table via the source command messes up the
#                 french characters. Manually reload the table before preprocessing the data
preprocess_data <- function(type='skate', test=TRUE) {
data <- load_data_raw(type)
data <- format_data(data)
data <- normalize_data(data)
if (test) {
data
} else {
write.csv(data[,c('Date', 'StartDateTime', 'EndDateTime', 'Arena', 'Locale', 'SessionType', 'SessionGroup', 'Latitude', 'Longitude')], file="skating.csv")
}
}
preprocess_data(type='swim', test=F)
preprocess_data <- function(type='skate', test=TRUE) {
data <- load_data_raw(type)
data <- format_data(data)
data <- normalize_data(data)
if (test) {
data
} else {
write.csv(data[,c('Date', 'StartDateTime', 'EndDateTime', 'Arena', 'Locale', 'SessionType', 'SessionGroup', 'Latitude', 'Longitude')],
file=paste0(type, ".csv"))
}
}
preprocess_data(type='skate', test=F)
preprocess_data <- function(type='skate', test=TRUE) {
data <- load_data_raw(type)
data <- format_data(data)
data <- normalize_data(data)
if (test) {
data
} else {
write.csv(data[,c('Date', 'StartDateTime', 'EndDateTime', 'Arena', 'Locale', 'SessionType', 'SessionGroup', 'Latitude', 'Longitude')],
file=paste0(type, ".csv"))
}
}
preprocess_data(type='swim', test=F)
preprocess_data <- function(type='skate', test=TRUE) {
data <- load_data_raw(type)
data <- format_data(data)
data <- normalize_data(data)
if (test) {
data
} else {
filename <- ifelse(type=='swim', 'swimming.csv', 'skating.csv')
write.csv(data[,c('Date', 'StartDateTime', 'EndDateTime', 'Arena', 'Locale', 'SessionType', 'SessionGroup', 'Latitude', 'Longitude')], file=filename)
}
}
